name: Create release

permissions:
  contents: write
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: false

on:
  release:
    types:
      - released

jobs:
  prepare:
    name: Prepare version info
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract.outputs.VERSION }}
      minor_version: ${{ steps.extract.outputs.MINOR_VERSION }}
    steps:
      - name: Extract version info
        id: extract
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          MINOR_VERSION=$(echo "$VERSION" | sed -e 's,\([0-9]\+\.[0-9]\+\)\..*,\1,')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "MINOR_VERSION=$MINOR_VERSION" >> $GITHUB_OUTPUT

  create_release:
    name: Create release
    runs-on: ubuntu-latest
    needs: prepare
    permissions:
      contents: write
      packages: write
    env:
      VERSION: ${{ needs.prepare.outputs.version }}
      MINOR_VERSION: ${{ needs.prepare.outputs.minor_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Update version in pyproject.toml
        run: |
          VERSION=$VERSION
          echo "Setting new version: $VERSION"
          sed -i "s/^version = .*/version = \"$VERSION\"/" pyproject.toml
          cat pyproject.toml  # Output the changes for debugging

      - name: Commit updated pyproject.toml
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: ":robot: Bump version to ${{ env.VERSION }}"
          branch: main
          file_pattern: "pyproject.toml"
